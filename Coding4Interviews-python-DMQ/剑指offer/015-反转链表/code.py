class ListNode:
    def __init__(self, x):
        self.val = x
        self.next = None

def ReverseList(pHead):
    # write code here

    if not pHead: return None
    head = ListNode(0)
    head.next = pHead
    p = pHead
    while(p.next):
        tp = p.next
        p.next = p.next.next
        tp.next = head.next
        head.next = tp
    return head.next


    # head->4->3->2->1->5
    #                p  tp
   
# 解法二
# -*- coding:utf-8 -*-
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None
class Solution:
    # 返回ListNode
    def ReverseList(self, pHead):
        # write code here
        if pHead == None or pHead.next == None:
            return pHead
        # 定义链表尾指针
        last = None
        while pHead:
            # 定义点的下一个结点
            tmp = pHead.next
            # 将头节点指向原本的链尾
            pHead.next = last
            # 原本的链尾变成头节点
            last = pHead
            # 进行遍历
            pHead = tmp
        return last